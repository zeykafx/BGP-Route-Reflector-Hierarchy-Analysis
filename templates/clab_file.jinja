name: scenario-hierarchy

topology:
  defaults:
    kind: linux
    image: quay.io/frrouting/frr:10.1.1
    network-mode: none
    sysctls:
      net.ipv6.conf.all.forwarding: 1
    binds:
      # FRR does not like "bind" file
      # So nasty hack, mount frr.conf as readonly (ro) file.
      # Then startup.sh will copy the ro frr.conf file into the
      # RW frr.conf and finally FRR starts
      - startup.sh:/etc/frr/startup.sh:ro
      - daemons:/etc/frr/daemons
      - vtysh.conf:/etc/frr/vtysh.conf
      - __clabNodeDir__/frr.conf:/etc/frr/frr.ro.conf:ro
  nodes:
    # Top level route reflectors
    {% for i in range(1, 3) %}
    RR{{ i }}T:
      cmd: /etc/frr/startup.sh
    {% endfor %}
    
    # Second level route reflectors
    {% for i in range(1, 5) %}
    RR{{ i }}S:
      cmd: /etc/frr/startup.sh
    {% endfor %}

    # Regular routers
    {% for i in range(1, 9) %}
    R{{ i }}:
      cmd: /etc/frr/startup.sh
    {% endfor %}

    # AS 65010
    AS2_R1:
      cmd: /etc/frr/startup.sh

    # AS 65020
    AS3_R1:
      cmd: /etc/frr/startup.sh

    # Hosts
    H1:
      image: host:latest
      sysctls:
        net.ipv6.conf.all.forwarding: 0
      exec:
        - ip -6 addr add fc00:2142:1:1::2/64 dev eth-rr1s
        - ip -6 route add default via fc00:2142:1:1::1 dev eth-rr1s
    H2:
      image: host:latest
      sysctls:
        net.ipv6.conf.all.forwarding: 0
      exec:
        - ip -6 addr add fc00:2142:1:2::2/64 dev eth-r4
        - ip -6 route add default via fc00:2142:1:2::1 dev eth-r4
    H3:
      image: host:latest
      sysctls:
        net.ipv6.conf.all.forwarding: 0
      exec:
        - ip -6 addr add fc00:2142:1:3::2/64 dev eth-r8
        - ip -6 route add default via fc00:2142:1:3::1 dev eth-r8

    AS2_H1:
      image: host:latest
      sysctls:
        net.ipv6.conf.all.forwarding: 0
      exec:
        - ip -6 addr add fc00:2142:a:2::2/64 dev eth-as2r1
        - ip -6 route add default via fc00:2142:a:2::1 dev eth-as2r1

    AS3_H1:
      image: host:latest
      sysctls:
        net.ipv6.conf.all.forwarding: 0
      exec:
        - ip -6 addr add fc00:2142:b:2::2/64 dev eth-as3r1
        - ip -6 route add default via fc00:2142:b:2::1 dev eth-as3r1

  links:
    # Top level route reflectors connected in full mesh
    - endpoints: [RR1T:eth-rr2t, RR2T:eth-rr1t]

    # Second level route reflectors connected to top level
    {% for i in range(1, 5) %}
    # RR{{ i }}S connections
    - endpoints: [RR1T:eth-rr{{ i }}s, RR{{ i }}S:eth-rr1t]
    - endpoints: [RR2T:eth-rr{{ i }}s, RR{{ i }}S:eth-rr2t]
    {% endfor %}


    # Host connections
    - endpoints: [RR1S:eth-h2, h1:eth-rr1s]
    - endpoints: [R4:eth-h2, h2:eth-r4]
    - endpoints: [R8:eth-h3, h3:eth-r8]
    # External Hosts connections
    - endpoints: [AS2_R1:eth-h1, AS2_H1:eth-as2r1]
    - endpoints: [AS3_R1:eth-h1, AS3_H1:eth-as3r1]

    # AS 65010 connections
    - endpoints: [RR4S:eth-as2r1, AS2_R1:eth-rr4s]

    # AS 65020 connections
    - endpoints: [R2:eth-as3r1, AS3_R1:eth-r2]


    # Regular routers connections
    {% for i in range(1, 9) %}
    {% set rr_pair = ((i-1) // 4) * 2 + 1 %}
    # R{{ i }}: connections to RR{{ rr_pair }}S and RR{{ rr_pair + 1 }}S
    - endpoints: [RR{{ rr_pair }}S:eth-r{{ i }}, R{{ i }}:eth-rr{{ rr_pair }}s]
    - endpoints: [RR{{ rr_pair + 1 }}S:eth-r{{ i }}, R{{ i }}:eth-rr{{ rr_pair + 1}}s]
    {% endfor %}

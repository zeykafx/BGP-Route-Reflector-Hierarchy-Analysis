frr version 10.1.1_git
frr defaults traditional
hostname {{ hostname }}
service integrated-vtysh-config
!
ipv6 forward
!
router isis {{ hostname }}
    net {{ net }}
    is-type level-1
exit
!
ipv6 route fc00:2142:1::/48 Null0
!
router bgp 65000
    bgp router-id {{ bgp_router_cluster_id }}
    bgp cluster-id {{ bgp_router_cluster_id }}
    bgp default ipv6-unicast
    no bgp default ipv4-unicast
    ! Top level RRs
    neighbor TOP_LEVEL peer-group
    neighbor TOP_LEVEL remote-as 65000
    neighbor eth-rr1t interface peer-group TOP_LEVEL
    neighbor eth-rr2t interface peer-group TOP_LEVEL
    {% if has_external_peer %}
    ! External peer
    neighbor EXTERNAL peer-group
    neighbor EXTERNAL remote-as 65010
    neighbor eth-e1 interface peer-group EXTERNAL
    {% endif %}
    ! Client routers
    neighbor CLIENTS peer-group
    neighbor CLIENTS remote-as 65000
    {% for client in client_interfaces %}
    neighbor {{ client.name }} interface peer-group CLIENTS
    {% endfor %}
    ! Address family
    address-family ipv6 unicast
        network fc00:2142:1::/48
        {% if has_host %}
        network {{ host_prefix }}
        {% endif %}
        ! Top level peers
        neighbor TOP_LEVEL activate
        neighbor TOP_LEVEL route-map FROM_TOP_LEVEL_IN in
        neighbor TOP_LEVEL route-map TO_TOP_LEVEL_OUT out
        {% if has_external_peer %}
        ! External peer
        neighbor EXTERNAL activate
        neighbor EXTERNAL route-map accept_from_external in
        neighbor EXTERNAL route-map send_to_external out
        {% endif %}
        ! Client routers
        neighbor CLIENTS activate
        neighbor CLIENTS route-reflector-client
        neighbor CLIENTS route-map to_client_in in
        neighbor CLIENTS route-map to_client_out out
    exit-address-family
exit
!
{% if has_external_peer %}
! Community list for external routes
! this is used to tag routes that are received from the external peer
! using this we can choose to only send these routes to the top level peer
bgp community-list standard EXTERNAL permit 65000:100
{% endif %}
!
route-map TO_TOP_LEVEL_OUT permit 10
    ! match community EXTERNAL
    match ipv6 address all
    set ipv6 next-hop peer-address
exit
!
route-map FROM_TOP_LEVEL_IN permit 10
    match ipv6 address all
    set ipv6 next-hop prefer-global
exit
!
route-map to_client_in permit 10
    match ipv6 address all
    set ipv6 next-hop prefer-global
exit
!
route-map to_client_out permit 10
    match ipv6 address all
    set ipv6 next-hop peer-address
exit
!
ipv6 access-list all seq 5 permit any
{% if has_external_peer %}
!
route-map accept_from_external permit 10
    match ipv6 address all
    set community 65000:100
    set local-preference 1000
    set ipv6 next-hop peer-address
exit
!
route-map send_to_external deny 10
    match community EXTERNAL
exit
!
route-map send_to_external permit 20
    match ipv6 address all
    ! set ipv6 next-hop peer-address
exit
{% endif %}
!
interface lo
    ipv6 address {{ loopback.ipv6_address }}
    ipv6 router isis {{ hostname }}
    isis passive
exit
!
{% for interface in top_rr_interfaces %}
interface {{ interface.name }}
    {% if interface.has_ip %}
    ipv6 address {{ interface.ipv6_address }}
    {% endif %}
    ipv6 router isis {{ hostname }}
    isis circuit-type level-1
    isis network point-to-point
exit
!
{% endfor %}
{% if has_host %}
interface {{ host_interface.name }}
    ipv6 address {{ host_interface.ipv6_address }}
    ipv6 router isis {{ hostname }}
    isis passive
    ipv6 nd prefix {{ host_interface.ipv6_address }} no-autoconfig
exit
!
{% endif %}
{% for client in client_interfaces %}
interface {{ client.name }}
    {% if client.has_ip %}
    ipv6 address {{ client.ipv6_address }}
    {% endif %}
    ipv6 router isis {{ hostname }}
    isis circuit-type level-1
    isis network point-to-point
exit
!
{% endfor %}
